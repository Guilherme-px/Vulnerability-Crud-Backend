const request = require('supertest');
const Vulnerability = require('../../src/models/Vulnerability');
const app = require('../../src/index');

beforeEach(async () => {
    await Vulnerability.deleteMany();
});

afterEach(async () => {
    await Vulnerability.deleteMany();
});

describe('register', () => {
    it('should register the vulnerabilities in the database', async () => {
        const response = await request(app)
            .post('/vulnerability/register')
            .send({
                title: 'security breach',
                description: 'a security breach',
                criticality: 'high',
                vulnerability: 'NETWORK',
                solution: 'encrypt password',
            });

        expect(response.status).toBe(201);
    });

    it('should return a msg property with a success message', async () => {
        const response = await request(app)
            .post('/vulnerability/register')
            .send({
                title: 'security breach',
                description: 'a security breach',
                criticality: 'high',
                vulnerability: 'NETWORK',
                solution: 'encrypt password',
            });

        expect(response.body).toHaveProperty('msg');
        expect(response.body.msg).toBe(
            'Vulnerabilidade cadastrada com sucesso!'
        );
    });

    it('should return status 400 if it does not receive mandatory data', async () => {
        const response = await request(app)
            .post('/vulnerability/register')
            .send({
                title: '',
                description: '',
                criticality: '',
                vulnerability: '',
                solution: '',
            });

        expect(response.status).toBe(400);
    });
});
